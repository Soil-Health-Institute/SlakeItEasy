% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/img_functions.R
\name{read_to_portrait}
\alias{read_to_portrait}
\title{Image Input}
\usage{
read_to_portrait(input_path)
}
\arguments{
\item{input_path}{path to the image file. Path may be provided as an absolute path or relative to the current working directory.}
}
\value{
An object of class \code{Image}.
}
\description{
Read an image into the current environment and check orientation. Rotate landscape-oriented images into portrait orientation.
}
\details{
\code{read_to_portrait} is a simple wrapper around \code{\link[EBImage:io]{EBImage::readImage()}} to ensure that images are in portrait orientation prior to further processing.

The following metadata are recorded as attributes of the \code{Image} object.

Attribute \code{rotated} = \code{no} if the original image was already in portrait orientation and \code{yes} if the image was rotated upon input.

Attribute \code{source_path} records the argument passed to \code{input_path}.
}
\examples{
# path to example image file
f <- system.file("images/exp1_1", "IMG_20220701_120110.jpg", package="SlakeItEasy")

# read in image
img_portrait <- read_to_portrait(f)

# verify that image is in portrait orientation
EBImage::display(img_portrait)

# get image dimensions
dim(img_portrait)

# compare with dimensions of original image
dim(EBImage::readImage(f))

}
